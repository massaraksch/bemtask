{
  "name": "enb-stylus",
  "version": "2.2.0",
  "description": "enb stylus techs",
  "keywords": [
    "enb",
    "stylus",
    "styl",
    "css",
    "autoprefixer",
    "nib"
  ],
  "author": {
    "name": "Marat Dulin",
    "email": "mdevils@yandex.ru"
  },
  "licenses": [
    {
      "type": "MPL-2.0",
      "url": "https://github.com/enb-make/enb-stylus/blob/master/LICENSE.txt"
    }
  ],
  "repository": {
    "type": "git",
    "url": "git@github.com:enb-make/enb-stylus.git"
  },
  "homepage": "https://github.com/enb-make/enb-stylus",
  "bugs": {
    "url": "https://github.com/enb-make/enb-stylus/issues"
  },
  "maintainers": [
    {
      "name": "Andrew Abramov",
      "email": "andrewblond@yandex.com"
    },
    {
      "name": "Marat Dulin",
      "email": "mdevils@yandex.ru"
    }
  ],
  "contributors": [
    {
      "name": "Andrew Abramov",
      "email": "andrewblond@yandex.com"
    },
    {
      "name": "Marat Dulin",
      "email": "mdevils@yandex.ru"
    },
    {
      "name": "Nickolay Ilchenko",
      "email": "tavriaforever@yandex.ru"
    }
  ],
  "peerDependencies": {
    "enb": ">=0.16.0 <2.0.0"
  },
  "dependencies": {
    "autoprefixer": "6.0.3",
    "csswring": "4.0.0",
    "es6-promise": "3.0.2",
    "nib": "1.1.0",
    "postcss": "5.0.10",
    "postcss-import": "7.1.0",
    "postcss-url": "5.0.2",
    "stylus": "0.52.0",
    "vow": "0.4.10"
  },
  "devDependencies": {
    "bower": "1.4.1",
    "bower-npm-install": "0.5.9",
    "deep-extend": "0.4.0",
    "enb": ">=0.16.0 <2.0.0",
    "istanbul": "0.3.18",
    "jscs": "1.13.1",
    "jshint": "2.8.0",
    "mocha": "2.2.5",
    "mock-enb": "0.3.0",
    "mock-fs": "3.1.0",
    "must": "0.12.0"
  },
  "scripts": {
    "test": "npm run lint && npm run unit",
    "unit": "npm run fixtures && mocha",
    "lint": "jshint . && jscs .",
    "fixtures": "cd test && bower-npm-install",
    "cover": "istanbul cover _mocha",
    "coveralls": "npm i coveralls && npm run cover -- --report lcovonly && cat ./coverage/lcov.info | coveralls"
  },
  "readme": "enb-stylus\n==========\n\n[![NPM version](http://img.shields.io/npm/v/enb-stylus.svg?style=flat)](http://www.npmjs.org/package/enb-stylus) [![Build Status](http://img.shields.io/travis/enb-make/enb-stylus/master.svg?style=flat&label=tests)](https://travis-ci.org/enb-make/enb-stylus) [![Build status](https://img.shields.io/appveyor/ci/blond/enb-stylus.svg?style=flat&label=windows)](https://ci.appveyor.com/project/blond/enb-stylus) [![Coverage Status](https://img.shields.io/coveralls/enb-make/enb-stylus.svg?style=flat)](https://coveralls.io/r/enb-make/enb-stylus?branch=master) [![Dependency Status](http://img.shields.io/david/enb-make/enb-stylus.svg?style=flat)](https://david-dm.org/enb-make/enb-stylus)\n\nПакет предоставляет [ENB](https://ru.bem.info/tools/bem/enb-bem/)-технологию для сборки CSS- и Stylus-файлов в проектах, построенных по [методологии БЭМ](https://ru.bem.info/method/).\n\nПринципы работы технологии и ее API описаны в документе [API технологии](api.ru.md).\n\n**Совместимость:** технология пакета `enb-stylus` поддерживает версию [CSS-препроцессора Stylus](https://github.com/stylus/stylus) `0.52.0`.\n\nОбзор документа\n---------------\n\n* [Работа технологии `stylus`](#Работа-технологии-stylus)\n* [Как начать использовать?](#Как-начать-использовать)\n* [Особенности работы пакета](#Особенности-работы-пакета)\n  * [Совместное использование Stylus и CSS](#Совместное-использование-stylus-и-css)\n  * [Добавление вендорных префиксов](#Добавление-вендорных-префиксов)\n  * [Минимизация CSS-кода](#Минимизация-css-кода)\n  * [Сборка отдельного бандла для IE](#Сборка-отдельного-бандла-для-ie)\n\nРабота технологии `stylus`\n--------------------------\n\nВ [БЭМ-методологии](https://ru.bem.info/method/filesystem/) стили к каждому блоку хранятся в отдельных файлах в директориях блоков.\n\nENB-технология `stylus` позволяет писать код как в синтаксисе Stylus, так и на чистом CSS. Для компиляции Stylus-кода в CSS используется CSS-препроцессор [Stylus](https://github.com/stylus/stylus).\n\nВ результате сборки вы получите CSS-файл. Для обработки итогового CSS используется CSS-построцессор [postcss](https://github.com/postcss/postcss).\n\nКак начать использовать?\n------------------------\n\n**1.** Установите пакет `enb-stylus`:\n\n```sh\n$ npm install --save-dev enb-stylus\n```\n\n**Требования:** зависимость от пакета `enb` версии `0.16.0` или выше.\n\n**2.** Опишите код стилей в файле с расширением `.styl`:\n```\n blocks/\n └── block/\n     └── block.styl\n```\n\n**3.** Добавьте в конфигурационный файл `.enb/make.js` следующий код:\n\n```js\nvar stylusTech = require('enb-stylus/techs/stylus'),\n    FileProvideTech = require('enb/techs/file-provider'),\n    bemTechs = require('enb-bem-techs');\n\nmodule.exports = function(config) {\n    config.node('bundle', function(node) {\n        // Получаем список файлов (FileList)\n        node.addTechs([\n            [FileProvideTech, { target: '?.bemdecl.js' }],\n            [bemTechs.levels, { levels: ['blocks'] }],\n            bemTechs.deps,\n            bemTechs.files\n        ]);\n\n        // Строим CSS-файл\n        node.addTech([stylusTech, {\n            // target: '?.css',\n            // filesTarget: '?.files',\n            // sourceSuffixes: ['.styl', '.css'],\n            // url: 'rebase'\n            // imports: 'include',\n            // comments: true\n        }]);\n        node.addTarget('?.css');\n    });\n};\n```\n\nОсобенности работы пакета\n-------------------------\n\n### Совместное использование Stylus и CSS\n\nВ проекте допускается совместное использование `.css`- и `.styl`-файлов. Однако в рамках одного блока обе технологии не могут использоваться одновременно. Если стили блока реализованы и в CSS, и в Stylus, будет использоваться файл с расширением `.styl`.\n\n**Пример 1.** Если файл одного блока реализован в CSS-технологии, а файл другого — в Stylus:\n\n```\nblocks/\n└── block1/\n    └── block1.styl\n└── block2/\n    └── block2.css\nbundle\n└── bundle.css\n```\n\nВ сборку попадут оба файла:\n\n```css\n@import \"../blocks/block1/block1.styl\";\n@import \"../blocks/block1/block2.css\";\n```\n\n**Пример 2.** Если у одного блока есть несколько реалиализаций: файл c расширением `.styl` и файл c расширением `.css`:\n\n```\nblocks/\n└── block/\n    ├── block.styl\n    └── block.css\nbundle\n└── bundle.css\n```\n\nВ сборку попадет только Stylus-файл:\n\n```css\n@import \"../blocks/block/block.styl\";\n```\n\n**Пример 3.** Если у одного блока есть несколько реалиализаций, но на разных уровнях переопределения:\n\n```\ncommon.blocks/\n└── block/\n    └── block.styl\ndesktop.blocks/\n    └── block/\n        └── block.css\nbundle\n└── bundle.css\n```\n\nВ сборку попадут оба файла:\n\n```css\n@import \"../common.blocks/block/block.styl\";\n@import \"../desktop.blocks/block/block.css\";\n```\n\n### Добавление вендорных префиксов\n\nТехнология `stylus` поддерживает [Autoprefixer](https://github.com/postcss/autoprefixer).\n\nДля автоматического добавления вендорных префиксов в процессе сборки используйте опцию [autoprefixer](api.ru.md#autoprefixer).\n\n### Минимизация CSS-кода\n\nДля минимизации CSS-кода используется [csswring](https://github.com/hail2u/node-csswring).\n\nВключить минимизацию можно с помощью опции [compress](api.ru.md#compress).\n\n### Сборка отдельного бандла для IE\n\nЕсли в проекте есть стили, которые должны примениться только для IE, то их помещают в отдельный файл со специальным расширением `.ie*.styl`:\n\n* `.ie.styl` — стили для любого IE, ниже 9й версии.\n* `.ie6.styl` — стили для IE 6.\n* `.ie7.styl` — стили для IE 7.\n* `.ie8.styl` — стили для IE 8.\n* `.ie9.styl` — стили для IE 9.\n\nЧтобы собрать отдельный бандл для IE нужно:\n\n**1.** В папке блока создать один или несколько файлов c расширением `.ie*.styl`:\n\n```\nblocks/\n└── block/\n    ├── block.styl\n    ├── block.ie.styl\n    └── block.ie6.styl\n```\n\n**2.** Добавить еще технологию `StylusTech`:\n\n```js\nnode.addTechs([\n   [stylusTech], // для основного CSS\n   [stylusTech]  // для IE\n]);\n```\n\n**3.** Добавить новую цель сборки для IE файла — `?.ie6.css`:\n\n```js\nnode.addTechs([\n    [stylusTech],\n    [stylusTech, { target: '?.ie6.css' }]  // IE 6\n]);\n\nnode.addTargets(['?.css', '?.ie6.css']);\n```\n\n**4.** В БЭМ проектах принято подключать стили с помощью [условных комментариев](https://ru.wikipedia.org/wiki/Условный_комментарий).\n\n**Пример**\n\n```html\n<!DOCTYPE html>\n<html>\n    <head>\n        <meta charset=\"utf-8\"/>\n        <!--[if gt IE 9]><!-->\n            <link rel=\"stylesheet\" href=\"index.css\"/>\n        <!--<![endif]-->\n        <!--[if lte IE 9]>\n            <link rel=\"stylesheet\" href=\"index.ie.css\"/>\n        <![endif]-->\n    </head>\n    <body>\n```\n\nВажно, чтобы файл, подключаемый для IE, содержал стили не только специфичные для него, но и общие для всей страницы.\n\nЧтобы собрать такой файл, нужно расширить список суффиксов с помощью опции [sourceSuffixed](api.ru.md#sourcesuffixes).\n\n```js\nnode.addTechs([\n    [stylusTech],\n    [stylusTech, {\n        target: '?.ie6.css',\n        sourceSuffixes: [\n            'styl', 'css',          // Общие стили\n            'ie.styl', 'ie.css',    // Стили для IE < 9\n            'ie6.styl', 'ie6.css'   // Стили для IE 6\n        ]\n    }]\n]);\nnode.addTargets(['?.css', '?.ie.css']);\n```\n\nВ итоге получаем следующий конфигурационный файл `.enb/make.js`:\n\n```js\nvar stylusTech = require('enb-stylus/techs/stylus'),\n    FileProvideTech = require('enb/techs/file-provider'),\n    bemTechs = require('enb-bem-techs');\n\nmodule.exports = function(config) {\n    config.node('bundle', function(node) {\n        // получаем список файлов (FileList)\n        node.addTechs([\n            [FileProvideTech, { target: '?.bemdecl.js' }],\n            [bemTechs.levels, { levels: ['blocks'] }],\n            bemTechs.deps,\n            bemTechs.files\n        ]);\n\n        // Собираем CSS-файлы\n        node.addTechs([\n            [stylusTech],\n            [stylusTech, {\n                target: '?.ie6.css',\n                sourceSuffixes: [\n                    'styl', 'css',          // Общие стили\n                    'ie.styl', 'ie.css',    // Стили для IE < 9\n                    'ie6.styl', 'ie6.css'   // Стили для IE 6\n                ]\n            }]\n        ]);\n        node.addTargets(['?.css', '?.ie6.css']);\n    });\n};\n```\n\nЛицензия\n--------\n\n© 2014 YANDEX LLC. Код лицензирован [Mozilla Public License 2.0](LICENSE.txt).\n",
  "readmeFilename": "README.md",
  "_id": "enb-stylus@2.2.0",
  "_from": "enb-stylus@^2.0.0"
}
